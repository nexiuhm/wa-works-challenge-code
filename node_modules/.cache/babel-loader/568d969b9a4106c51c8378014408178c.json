{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport default function useCompositeFilter(baseData) {\n  _s();\n\n  const [filters, setFilters] = useState([]);\n  const [filteredData, setFilteredData] = useState(null);\n\n  function addFilter(filterName, condition) {\n    setFilters([...filters, {\n      filterName: filterName,\n      condition: condition\n    }]);\n    console.log(\"Added Filter\", [...filters, {\n      filterName: filterName,\n      condition: condition\n    }]);\n  }\n\n  function removeFilter(filterName) {\n    const match = filters.filter(o => o.filterName != filterName);\n    console.log(\"Removed filter testta her\", match);\n    setFilters(match);\n  }\n\n  useEffect(() => {\n    console.log(\"filters aktiv:\", filters); // Settil til orginal data om ingen aktive filtere\n\n    if (filters.length === 0) {\n      setFilteredData(baseData);\n      return;\n    }\n\n    const filterResult = baseData.filter(o => {\n      return filters.every(f => {\n        console.log(f);\n        return f.condition(o);\n      });\n    });\n    setFilteredData(filterResult);\n    console.log(\"debug: resultat\", filterResult);\n  }, [filters]);\n\n  function applyFilters(dataSet) {}\n\n  return {\n    filteredData: filteredData,\n    addFilter: addFilter,\n    removeFilter: removeFilter,\n    applyFilters\n  };\n}\n\n_s(useCompositeFilter, \"XHfXQfNh6E9r7bxUpkm2ok8BMos=\");","map":{"version":3,"sources":["C:/Users/Erlend/Desktop/thechall/wa-works-challenge-code/src/hooks/CompositeFilter.tsx"],"names":["useEffect","useState","useCompositeFilter","baseData","filters","setFilters","filteredData","setFilteredData","addFilter","filterName","condition","console","log","removeFilter","match","filter","o","length","filterResult","every","f","applyFilters","dataSet"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AASA,eAAe,SAASC,kBAAT,CAA+BC,QAA/B,EAA8C;AAAA;;AAE3D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAa,IAAb,CAAhD;;AAEA,WAASO,SAAT,CAAmBC,UAAnB,EAAuCC,SAAvC,EAA4D;AAE1DL,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAa;AAAEK,MAAAA,UAAU,EAAEA,UAAd;AAA0BC,MAAAA,SAAS,EAAEA;AAArC,KAAb,CAAD,CAAV;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,CAAC,GAAGR,OAAJ,EAAa;AAAEK,MAAAA,UAAU,EAAEA,UAAd;AAA0BC,MAAAA,SAAS,EAAEA;AAArC,KAAb,CAA5B;AAED;;AAED,WAASG,YAAT,CAAsBJ,UAAtB,EAA0C;AAExC,UAAMK,KAAK,GAAGV,OAAO,CAACW,MAAR,CAAgBC,CAAD,IAAOA,CAAC,CAACP,UAAF,IAAgBA,UAAtC,CAAd;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,KAAzC;AACAT,IAAAA,UAAU,CAACS,KAAD,CAAV;AAED;;AAIDd,EAAAA,SAAS,CAAC,MAAM;AAEdW,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,OAA9B,EAFc,CAKd;;AACA,QAAIA,OAAO,CAACa,MAAR,KAAmB,CAAvB,EAA0B;AAAEV,MAAAA,eAAe,CAACJ,QAAD,CAAf;AAA2B;AAAS;;AAEhE,UAAMe,YAAY,GAAGf,QAAQ,CAACY,MAAT,CAAiBC,CAAD,IAAO;AAE1C,aACEZ,OAAO,CAACe,KAAR,CAAeC,CAAD,IAAO;AACnBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACA,eAAOA,CAAC,CAACV,SAAF,CAAYM,CAAZ,CAAP;AACD,OAHD,CADF;AAQD,KAVoB,CAArB;AAYAT,IAAAA,eAAe,CAACW,YAAD,CAAf;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,YAA/B;AAKD,GA1BQ,EA0BN,CAACd,OAAD,CA1BM,CAAT;;AA6BA,WAASiB,YAAT,CAAyBC,OAAzB,EAAuC,CAGtC;;AAGD,SAAO;AAAEhB,IAAAA,YAAY,EAAEA,YAAhB;AAA8BE,IAAAA,SAAS,EAAEA,SAAzC;AAAoDK,IAAAA,YAAY,EAAEA,YAAlE;AAAgFQ,IAAAA;AAAhF,GAAP;AAGD;;GA9DuBnB,kB","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\ntype Filter = {\r\n  filterName: string,\r\n  condition: Function\r\n\r\n}\r\n\r\n\r\nexport default function useCompositeFilter<T>(baseData: T[]) {\r\n\r\n  const [filters, setFilters] = useState<Filter[]>([])\r\n  const [filteredData, setFilteredData] = useState<T[] | null>(null)\r\n\r\n  function addFilter(filterName: string, condition: Function) {\r\n\r\n    setFilters([...filters, { filterName: filterName, condition: condition }])\r\n\r\n    console.log(\"Added Filter\", [...filters, { filterName: filterName, condition: condition }])\r\n\r\n  }\r\n\r\n  function removeFilter(filterName: string) {\r\n\r\n    const match = filters.filter((o) => o.filterName != filterName)\r\n\r\n    console.log(\"Removed filter testta her\", match)\r\n    setFilters(match)\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"filters aktiv:\", filters)\r\n\r\n\r\n    // Settil til orginal data om ingen aktive filtere\r\n    if (filters.length === 0) { setFilteredData(baseData); return; }\r\n\r\n    const filterResult = baseData.filter((o) => {\r\n\r\n      return (\r\n        filters.every((f) => {\r\n          console.log(f)\r\n          return f.condition(o)\r\n        })\r\n      )\r\n\r\n\r\n    })\r\n\r\n    setFilteredData(filterResult);\r\n    console.log(\"debug: resultat\", filterResult)\r\n\r\n\r\n\r\n\r\n  }, [filters])\r\n\r\n\r\n  function applyFilters<T>(dataSet: T[]) {\r\n\r\n\r\n  }\r\n\r\n\r\n  return { filteredData: filteredData, addFilter: addFilter, removeFilter: removeFilter, applyFilters }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}