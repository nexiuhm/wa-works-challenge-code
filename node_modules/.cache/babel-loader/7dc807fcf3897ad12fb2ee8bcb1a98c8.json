{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erlend\\\\Desktop\\\\thechall\\\\wa-works-challenge-code\\\\src\\\\components\\\\SortTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { css } from '@emotion/css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* Todo : move to some kind of util/helper functions file */\nfunction sortArrayByKey(array, key, ascending) {\n  console.log(array, key, ascending);\n  const sortedArray = [...array].sort((a, b) => {\n    return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0;\n  });\n  console.log(sortedArray);\n  return ascending ? sortedArray : sortedArray.reverse(); // probably not optimal\n}\n\nexport default function SortTable({\n  data,\n  columnLabels,\n  onItemSelected = null\n}) {\n  _s();\n\n  const [sortState, setSortState] = useState({\n    sortColumn: columnLabels[0],\n    ascending: true\n  });\n  const [_data, setData] = useState(data);\n  /* When internal sort state or data prop is updated, sort movies */\n\n  useEffect(() => {\n    setData(sortArrayByKey(data, sortState.sortColumn, sortState.ascending));\n    console.log(data);\n  }, [sortState, data]);\n  /* Reverse sort direction if same colulmn is selected twice, otherwise sort the new column ascending */\n\n  const updateSortState = column => column === sortState.sortColumn ? setSortState({\n    sortColumn: column,\n    ascending: !sortState.ascending\n  }) : setSortState({\n    sortColumn: column,\n    ascending: true\n  });\n\n  const renderTableRow = item => /*#__PURE__*/_jsxDEV(\"tr\", {\n    onClick: () => onItemSelected && onItemSelected(item),\n    children: columnLabels.map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", item[key], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n\n  const renderTabelHead = label => /*#__PURE__*/_jsxDEV(\"td\", {\n    onClick: () => updateSortState(label),\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: css`\n        padding: 10px;\n        background: linear-gradient(90deg, rgba(121,62,224,0.7) 0%, rgba(62,121,227,0.3) 52%, rgba(38,96,201,0.7) 83%);\n        font-size: 24px;\n        border-radius: 4px;\n        width: 100%;\n        user-select: none;\n        \n        color: white;\n        border: 0;\n     \n        \n        \n        font-size: 12px;\n        border-collapse: collapse; \n        box-sizing: border-box;\n        \n        tr:hover {\n          background: rgba(121,62,224,0.4598214285714286);\n          \n          box-shadow: 0 0 0 1px #999999;\n          transform: scale(1.01);\n         \n\n         \n          \n        }\n\n        tr {\n          height: 20px;\n          min-height: 20px;\n          max-height: 20px;\n          box-sizing: border-box;\n          overflow:hidden;\n         \n         \n          \n         \n        }\n\n        td {\n          padding: 20px;\n          width: 100px;\n          max-width: 100px;\n          min-width: 100px;\n          box-sizing: border-box;\n          \n        }\n      `,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columnLabels.map(label => renderTabelHead(label))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: _data.map(item => renderTableRow(item))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SortTable, \"o4TomfpJemOv0/KpG08hhlR/CgQ=\");\n\n_c = SortTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortTable\");","map":{"version":3,"sources":["C:/Users/Erlend/Desktop/thechall/wa-works-challenge-code/src/components/SortTable.tsx"],"names":["useState","useEffect","css","sortArrayByKey","array","key","ascending","console","log","sortedArray","sort","a","b","reverse","SortTable","data","columnLabels","onItemSelected","sortState","setSortState","sortColumn","_data","setData","updateSortState","column","renderTableRow","item","map","renderTabelHead","label"],"mappings":"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","sourcesContent":["\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { css, cx } from '@emotion/css'\r\n\r\n\r\ntype Props<T,K> = {\r\n    data: T[];\r\n    columnLabels: K[];\r\n    className?: string;\r\n    onItemSelected?: Function | null;\r\n    //tableHeadData: {label:String, sortKey:String}[];\r\n    \r\n}\r\n\r\ntype sortState<K> = {\r\n    sortColumn: K,\r\n    ascending: boolean\r\n\r\n}\r\n\r\n/* Todo : move to some kind of util/helper functions file */\r\nfunction sortArrayByKey<T,K extends keyof T>(array:T[],key:K, ascending:boolean):any[] {\r\n\r\n\r\n  console.log(array, key,ascending )\r\n  const sortedArray = [...array].sort((a,b)=> {\r\n    return (a[key] < b[key]) ? -1 : (a[key] > b[key]) ? 1 : 0\r\n  });\r\n\r\n  console.log(sortedArray)\r\n\r\n  return ascending ? sortedArray : sortedArray.reverse(); // probably not optimal\r\n\r\n}\r\n\r\n\r\n\r\nexport default function SortTable<T, K extends keyof T>({data,columnLabels,onItemSelected = null}:Props<T,K>) {\r\n\r\n\r\n \r\n    const [sortState, setSortState] = useState<sortState<K>>({sortColumn: columnLabels[0],ascending: true })\r\n    const [_data, setData] = useState(data)\r\n\r\n\r\n  \r\n    /* When internal sort state or data prop is updated, sort movies */\r\n\r\n    useEffect(()=> {\r\n     \r\n      setData(sortArrayByKey(data, sortState.sortColumn, sortState.ascending))\r\n      \r\n    console.log(data)\r\n    },[sortState,data])\r\n\r\n    \r\n    /* Reverse sort direction if same colulmn is selected twice, otherwise sort the new column ascending */\r\n    const updateSortState = (column:K) => column === sortState.sortColumn? setSortState({sortColumn:column,ascending: !sortState.ascending}) : setSortState({sortColumn:column,ascending: true})\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n    const renderTableRow = (item:T) => \r\n\r\n      <tr onClick={()=>(onItemSelected && onItemSelected(item)) }>\r\n        { columnLabels.map( (key)=> <td> {item[key]} </td> ) }\r\n      </tr>\r\n\r\n    const renderTabelHead = (label:K) => \r\n\r\n      <td onClick={()=>updateSortState(label) }>\r\n        { label}\r\n      </td> \r\n    \r\n      \r\n\r\n    \r\n    return (  \r\n       \r\n\r\n      \r\n        <table className = {css`\r\n        padding: 10px;\r\n        background: linear-gradient(90deg, rgba(121,62,224,0.7) 0%, rgba(62,121,227,0.3) 52%, rgba(38,96,201,0.7) 83%);\r\n        font-size: 24px;\r\n        border-radius: 4px;\r\n        width: 100%;\r\n        user-select: none;\r\n        \r\n        color: white;\r\n        border: 0;\r\n     \r\n        \r\n        \r\n        font-size: 12px;\r\n        border-collapse: collapse; \r\n        box-sizing: border-box;\r\n        \r\n        tr:hover {\r\n          background: rgba(121,62,224,0.4598214285714286);\r\n          \r\n          box-shadow: 0 0 0 1px #999999;\r\n          transform: scale(1.01);\r\n         \r\n\r\n         \r\n          \r\n        }\r\n\r\n        tr {\r\n          height: 20px;\r\n          min-height: 20px;\r\n          max-height: 20px;\r\n          box-sizing: border-box;\r\n          overflow:hidden;\r\n         \r\n         \r\n          \r\n         \r\n        }\r\n\r\n        td {\r\n          padding: 20px;\r\n          width: 100px;\r\n          max-width: 100px;\r\n          min-width: 100px;\r\n          box-sizing: border-box;\r\n          \r\n        }\r\n      `}>\r\n\r\n          <thead>\r\n            <tr>\r\n            {columnLabels.map((label)=>renderTabelHead(label))}\r\n            </tr>\r\n          </thead>\r\n\r\n        <tbody>\r\n        {_data.map((item)=>renderTableRow(item))}\r\n        </tbody>\r\n        \r\n      </table>\r\n\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}